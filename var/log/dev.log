[2024-02-27T16:02:47.647367+01:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0" [] []
[2024-02-27T16:02:47.898970+01:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus/resolved?specifier=%5E3.0.0" [] []
[2024-02-27T16:02:48.001753+01:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2024-02-27T16:02:48.002263+01:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints" [] []
[2024-02-27T16:02:48.056758+01:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2024-02-27T16:02:48.058808+01:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/stimulus@3.2.2/entrypoints" [] []
[2024-02-27T16:02:48.059318+01:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2024-02-27T16:02:48.072570+01:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/stimulus@3.2.2/+esm" [] []
[2024-02-27T16:02:48.962135+01:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0" [] []
[2024-02-27T16:02:49.144754+01:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo/resolved?specifier=%5E7.1.0" [] []
[2024-02-27T16:02:49.220207+01:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2024-02-27T16:02:49.221435+01:00] http_client.INFO: Request: "GET https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints" [] []
[2024-02-27T16:02:49.260088+01:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2024-02-27T16:02:49.262315+01:00] http_client.INFO: Response: "200 https://data.jsdelivr.com/v1/packages/npm/@hotwired/turbo@7.3.0/entrypoints" [] []
[2024-02-27T16:02:49.264458+01:00] http_client.INFO: Request: "GET https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2024-02-27T16:02:49.273283+01:00] http_client.INFO: Response: "200 https://cdn.jsdelivr.net/npm/@hotwired/turbo@7.3.0/+esm" [] []
[2024-02-27T16:02:58.098621+01:00] php.DEBUG: Warning: filemtime(): stat failed for C:\xampp\htdocs\cours\filRouge_repo\cleanthis\skeleton\config\routes\framework.yaml {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":2,"file":"C:\\xampp\\htdocs\\cours\\filRouge_repo\\cleanthis\\vendor\\symfony\\config\\Resource\\FileResource.php","line":58,"trace":[{"file":"C:\\xampp\\htdocs\\cours\\filRouge_repo\\cleanthis\\vendor\\symfony\\config\\Resource\\SelfCheckingResourceChecker.php","line":44,"function":"isFresh","class":"Symfony\\Component\\Config\\Resource\\FileResource","type":"->"}],"count":1}}} []
[2024-02-27T16:07:24.271054+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2024-02-27T16:07:24.290147+01:00] doctrine.DEBUG: Executing statement: CREATE DATABASE `CleanThis` {"sql":"CREATE DATABASE `CleanThis`"} []
[2024-02-27T16:07:24.291237+01:00] doctrine.INFO: Disconnecting [] []
[2024-02-27T16:07:50.514256+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"CleanThis","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"CleanThis","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2024-02-27T16:07:50.519483+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:07:54.819163+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:07:54.820230+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-27T16:07:54.829998+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2190 called by AbstractPlatform.php:2088, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2190 called by AbstractPlatform.php:2088, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\xampp\\htdocs\\cours\\filRouge_repo\\cleanthis\\vendor\\doctrine\\deprecations\\lib\\Doctrine\\Deprecations\\Deprecation.php:210)"} []
[2024-02-27T16:07:54.836500+01:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at DATETIME DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) DEFAULT CHARACTER SET utf8 COLLATE `utf8_unicode_ci` ENGINE = InnoDB"} []
[2024-02-27T16:07:54.865769+01:00] console.DEBUG: Command ""d:m:m"" exited with code "1" {"command":"\"d:m:m\"","code":1} []
[2024-02-27T16:07:54.866069+01:00] doctrine.INFO: Disconnecting [] []
[2024-02-27T16:08:09.129512+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"CleanThis","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"CleanThis","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2024-02-27T16:08:09.134344+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:09.136173+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-27T16:08:09.136791+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:09.136998+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-27T16:08:09.145913+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:09.146211+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-27T16:08:09.147022+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:09.147260+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-27T16:08:09.147781+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"cleanthis","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"cleanthis","2":"cleanthis","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-02-27T16:08:09.155097+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:09.155310+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-27T16:08:09.157918+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-27T16:08:09.159348+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:09.159528+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-27T16:08:09.159871+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:09.160015+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-27T16:08:09.160330+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:09.160457+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-27T16:08:09.160963+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:09.161068+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-27T16:08:09.161421+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"cleanthis","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"cleanthis","2":"cleanthis","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-02-27T16:08:09.165911+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:09.166129+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-27T16:08:09.167102+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-27T16:08:09.169034+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:09.170121+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"cleanthis"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"cleanthis","2":"cleanthis"},"types":{"1":2,"2":2}} []
[2024-02-27T16:08:09.179938+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-27T16:08:09.180450+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-27T16:08:09.180962+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-27T16:08:09.182567+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:09.184589+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:09.194029+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2190 called by AbstractPlatform.php:2109, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2190 called by AbstractPlatform.php:2109, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\xampp\\htdocs\\cours\\filRouge_repo\\cleanthis\\vendor\\doctrine\\deprecations\\lib\\Doctrine\\Deprecations\\Deprecation.php:210)"} []
[2024-02-27T16:08:09.197993+01:00] doctrine.INFO: Disconnecting [] []
[2024-02-27T16:08:12.110800+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"CleanThis","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"CleanThis","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2024-02-27T16:08:12.129633+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:14.473616+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:14.474714+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-27T16:08:14.482607+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:14.482934+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-27T16:08:14.483569+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:14.483895+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-27T16:08:14.484469+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"cleanthis","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"cleanthis","2":"cleanthis","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-02-27T16:08:14.498894+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-27T16:08:14.499196+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-27T16:08:14.504834+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-27T16:08:14.505481+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-27T16:08:14.505925+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-27T16:08:14.511188+01:00] doctrine.DEBUG: Beginning transaction [] []
[2024-02-27T16:08:14.515133+01:00] doctrine.DEBUG: Executing query: CREATE TABLE messenger_messages (id BIGINT AUTO_INCREMENT NOT NULL, body LONGTEXT NOT NULL, headers LONGTEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', available_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', delivered_at DATETIME DEFAULT NULL COMMENT '(DC2Type:datetime_immutable)', INDEX IDX_75EA56E0FB7336F0 (queue_name), INDEX IDX_75EA56E0E3BD61CE (available_at), INDEX IDX_75EA56E016BA31DB (delivered_at), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE messenger_messages (id BIGINT AUTO_INCREMENT NOT NULL, body LONGTEXT NOT NULL, headers LONGTEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', available_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', delivered_at DATETIME DEFAULT NULL COMMENT '(DC2Type:datetime_immutable)', INDEX IDX_75EA56E0FB7336F0 (queue_name), INDEX IDX_75EA56E0E3BD61CE (available_at), INDEX IDX_75EA56E016BA31DB (delivered_at), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-02-27T16:08:14.530935+01:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20240227150809","2":"2024-02-27 16:08:14","3":19}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20240227150809","2":"2024-02-27 16:08:14","3":19},"types":{"1":2,"2":2,"3":1}} []
[2024-02-27T16:08:14.533387+01:00] deprecation.INFO: User Deprecated: Context: trying to commit a transaction Problem: the transaction is already committed, relying on silencing is deprecated. Solution: override `AbstractMigration::isTransactional()` so that it returns false. Automate that by setting `transactional` to false in the configuration. More details at https://www.doctrine-project.org/projects/doctrine-migrations/en/stable/explanation/implicit-commits.html (TransactionHelper.php:20 called by DbalExecutor.php:191, https://github.com/doctrine/migrations/issues/1169, package doctrine/migrations) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Context: trying to commit a transaction\r\nProblem: the transaction is already committed, relying on silencing is deprecated.\r\nSolution: override `AbstractMigration::isTransactional()` so that it returns false.\r\nAutomate that by setting `transactional` to false in the configuration.\r\nMore details at https://www.doctrine-project.org/projects/doctrine-migrations/en/stable/explanation/implicit-commits.html (TransactionHelper.php:20 called by DbalExecutor.php:191, https://github.com/doctrine/migrations/issues/1169, package doctrine/migrations) at C:\\xampp\\htdocs\\cours\\filRouge_repo\\cleanthis\\vendor\\doctrine\\deprecations\\lib\\Doctrine\\Deprecations\\Deprecation.php:210)"} []
[2024-02-27T16:08:14.540469+01:00] doctrine.INFO: Disconnecting [] []
[2024-02-28T10:51:44.095667+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"CleanThis","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"CleanThis","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2024-02-28T10:51:44.125248+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:44.127535+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-28T10:51:44.128404+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:44.128592+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-28T10:51:44.137550+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:44.137769+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-28T10:51:44.138519+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:44.138763+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-28T10:51:44.139572+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"cleanthis","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"cleanthis","2":"cleanthis","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-02-28T10:51:44.144373+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:44.144567+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-28T10:51:44.147118+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-28T10:51:44.149869+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:44.150046+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-28T10:51:44.150351+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:44.150483+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-28T10:51:44.150785+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:44.150898+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-28T10:51:44.151298+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:44.151400+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-28T10:51:44.151725+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"cleanthis","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"cleanthis","2":"cleanthis","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-02-28T10:51:44.155261+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:44.155480+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-28T10:51:44.155979+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-28T10:51:44.157986+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:44.158182+01:00] doctrine.DEBUG: Executing statement: SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"cleanthis"}, types: array{"1":2,"2":2}) {"sql":"SELECT c.TABLE_NAME,       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' ORDER BY ORDINAL_POSITION","params":{"1":"cleanthis","2":"cleanthis"},"types":{"1":2,"2":2}} []
[2024-02-28T10:51:44.162380+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME,        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? ORDER BY SEQ_IN_INDEX","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-28T10:51:44.162841+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT DISTINCT k.TABLE_NAME,            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-28T10:51:44.163219+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-28T10:51:44.164946+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:44.182407+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:44.192557+01:00] deprecation.INFO: User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2190 called by AbstractPlatform.php:2109, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Subscribing to onSchemaCreateTable events is deprecated. (AbstractPlatform.php:2190 called by AbstractPlatform.php:2109, https://github.com/doctrine/dbal/issues/5784, package doctrine/dbal) at C:\\xampp\\htdocs\\cours\\filRouge_repo\\cleanthis\\vendor\\doctrine\\deprecations\\lib\\Doctrine\\Deprecations\\Deprecation.php:210)"} []
[2024-02-28T10:51:44.197708+01:00] doctrine.INFO: Disconnecting [] []
[2024-02-28T10:51:52.379981+01:00] doctrine.INFO: Connecting with parameters array{"use_savepoints":true,"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"CleanThis","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"} {"params":{"use_savepoints":true,"driver":"pdo_mysql","host":"127.0.0.1","port":3306,"user":"root","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"CleanThis","serverVersion":"10.4.32-MariaDB","charset":"utf8mb4"}} []
[2024-02-28T10:51:52.399291+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:54.024956+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:54.026099+01:00] doctrine.DEBUG: Executing statement: SELECT TABLE_NAME FROM information_schema.TABLES WHERE TABLE_SCHEMA = ?   AND TABLE_TYPE = 'BASE TABLE' ORDER BY TABLE_NAME (parameters: array{"1":"cleanthis"}, types: array{"1":2}) {"sql":"SELECT TABLE_NAME\r\nFROM information_schema.TABLES\r\nWHERE TABLE_SCHEMA = ?\r\n  AND TABLE_TYPE = 'BASE TABLE'\r\nORDER BY TABLE_NAME","params":{"1":"cleanthis"},"types":{"1":2}} []
[2024-02-28T10:51:54.034184+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:54.034447+01:00] doctrine.DEBUG: Executing statement:     SELECT t.TABLE_NAME,            t.ENGINE,            t.AUTO_INCREMENT,            t.TABLE_COMMENT,            t.CREATE_OPTIONS,            t.TABLE_COLLATION,            ccsa.CHARACTER_SET_NAME       FROM information_schema.TABLES t         INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa             ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE' (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"    SELECT t.TABLE_NAME,\r\n           t.ENGINE,\r\n           t.AUTO_INCREMENT,\r\n           t.TABLE_COMMENT,\r\n           t.CREATE_OPTIONS,\r\n           t.TABLE_COLLATION,\r\n           ccsa.CHARACTER_SET_NAME\r\n      FROM information_schema.TABLES t\r\n        INNER JOIN information_schema.COLLATION_CHARACTER_SET_APPLICABILITY ccsa\r\n            ON ccsa.COLLATION_NAME = t.TABLE_COLLATION WHERE t.TABLE_SCHEMA = ? AND t.TABLE_NAME = ? AND t.TABLE_TYPE = 'BASE TABLE'","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-28T10:51:54.035154+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:54.035400+01:00] doctrine.DEBUG: Executing statement: SELECT DISTINCT            k.CONSTRAINT_NAME,             k.COLUMN_NAME,             k.REFERENCED_TABLE_NAME,             k.REFERENCED_COLUMN_NAME,             k.ORDINAL_POSITION /*!50116,             c.UPDATE_RULE,             c.DELETE_RULE */ FROM information_schema.key_column_usage k /*!50116 INNER JOIN information_schema.referential_constraints c ON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME AND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT DISTINCT            k.CONSTRAINT_NAME,\r\n            k.COLUMN_NAME,\r\n            k.REFERENCED_TABLE_NAME,\r\n            k.REFERENCED_COLUMN_NAME,\r\n            k.ORDINAL_POSITION /*!50116,\r\n            c.UPDATE_RULE,\r\n            c.DELETE_RULE */\r\nFROM information_schema.key_column_usage k /*!50116\r\nINNER JOIN information_schema.referential_constraints c\r\nON c.CONSTRAINT_NAME = k.CONSTRAINT_NAME\r\nAND c.TABLE_NAME = k.TABLE_NAME */ WHERE k.TABLE_SCHEMA = ? AND k.TABLE_NAME = ? AND k.REFERENCED_COLUMN_NAME IS NOT NULL /*!50116 AND c.CONSTRAINT_SCHEMA = 'cleanthis' */ ORDER BY k.ORDINAL_POSITION","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-28T10:51:54.036147+01:00] doctrine.DEBUG: Executing statement: SELECT       c.COLUMN_NAME        AS field,            IF(         c.COLUMN_TYPE = 'longtext'         AND EXISTS(             SELECT * from information_schema.CHECK_CONSTRAINTS i_c             WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'             AND i_c.TABLE_NAME = c.TABLE_NAME             AND i_c.CHECK_CLAUSE = CONCAT(                 'json_valid(`',                     c.COLUMN_NAME,                 '`)'             )         ),         'json',         c.COLUMN_TYPE     )       AS type,        c.IS_NULLABLE        AS `null`,        c.COLUMN_KEY         AS `key`,        c.COLUMN_DEFAULT     AS `default`,        c.EXTRA,        c.COLUMN_COMMENT     AS comment,        c.CHARACTER_SET_NAME AS characterset,        c.COLLATION_NAME     AS collation FROM information_schema.COLUMNS c     INNER JOIN information_schema.TABLES t         ON t.TABLE_NAME = c.TABLE_NAME      WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION (parameters: array{"1":"cleanthis","2":"cleanthis","3":"doctrine_migration_versions"}, types: array{"1":2,"2":2,"3":2}) {"sql":"SELECT       c.COLUMN_NAME        AS field,\r\n           IF(\r\n        c.COLUMN_TYPE = 'longtext'\r\n        AND EXISTS(\r\n            SELECT * from information_schema.CHECK_CONSTRAINTS i_c\r\n            WHERE i_c.CONSTRAINT_SCHEMA = 'cleanthis'\r\n            AND i_c.TABLE_NAME = c.TABLE_NAME\r\n            AND i_c.CHECK_CLAUSE = CONCAT(\r\n                'json_valid(`',\r\n                    c.COLUMN_NAME,\r\n                '`)'\r\n            )\r\n        ),\r\n        'json',\r\n        c.COLUMN_TYPE\r\n    )       AS type,\r\n       c.IS_NULLABLE        AS `null`,\r\n       c.COLUMN_KEY         AS `key`,\r\n       c.COLUMN_DEFAULT     AS `default`,\r\n       c.EXTRA,\r\n       c.COLUMN_COMMENT     AS comment,\r\n       c.CHARACTER_SET_NAME AS characterset,\r\n       c.COLLATION_NAME     AS collation\r\nFROM information_schema.COLUMNS c\r\n    INNER JOIN information_schema.TABLES t\r\n        ON t.TABLE_NAME = c.TABLE_NAME\r\n     WHERE c.TABLE_SCHEMA = ? AND t.TABLE_SCHEMA = ? AND t.TABLE_TYPE = 'BASE TABLE' AND t.TABLE_NAME = ? ORDER BY ORDINAL_POSITION","params":{"1":"cleanthis","2":"cleanthis","3":"doctrine_migration_versions"},"types":{"1":2,"2":2,"3":2}} []
[2024-02-28T10:51:54.050330+01:00] doctrine.DEBUG: Executing query: SELECT DATABASE() {"sql":"SELECT DATABASE()"} []
[2024-02-28T10:51:54.050622+01:00] doctrine.DEBUG: Executing statement: SELECT        NON_UNIQUE  AS Non_Unique,         INDEX_NAME  AS Key_name,         COLUMN_NAME AS Column_Name,         SUB_PART    AS Sub_Part,         INDEX_TYPE  AS Index_Type FROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX (parameters: array{"1":"cleanthis","2":"doctrine_migration_versions"}, types: array{"1":2,"2":2}) {"sql":"SELECT        NON_UNIQUE  AS Non_Unique,\r\n        INDEX_NAME  AS Key_name,\r\n        COLUMN_NAME AS Column_Name,\r\n        SUB_PART    AS Sub_Part,\r\n        INDEX_TYPE  AS Index_Type\r\nFROM information_schema.STATISTICS WHERE TABLE_SCHEMA = ? AND TABLE_NAME = ? ORDER BY SEQ_IN_INDEX","params":{"1":"cleanthis","2":"doctrine_migration_versions"},"types":{"1":2,"2":2}} []
[2024-02-28T10:51:54.056565+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-28T10:51:54.057496+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-28T10:51:54.057813+01:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2024-02-28T10:51:54.062492+01:00] doctrine.DEBUG: Beginning transaction [] []
[2024-02-28T10:51:54.064703+01:00] doctrine.DEBUG: Executing query: CREATE TABLE address (id INT AUTO_INCREMENT NOT NULL, zipcode VARCHAR(6) NOT NULL, city VARCHAR(50) NOT NULL, street VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE address (id INT AUTO_INCREMENT NOT NULL, zipcode VARCHAR(6) NOT NULL, city VARCHAR(50) NOT NULL, street VARCHAR(255) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-02-28T10:51:54.082061+01:00] doctrine.DEBUG: Executing query: CREATE TABLE belong (id INT AUTO_INCREMENT NOT NULL, invoice_id INT DEFAULT NULL, operation_id INT DEFAULT NULL, created_at DATE NOT NULL, UNIQUE INDEX UNIQ_BFFF81BB2989F1FD (invoice_id), UNIQUE INDEX UNIQ_BFFF81BB44AC3583 (operation_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE belong (id INT AUTO_INCREMENT NOT NULL, invoice_id INT DEFAULT NULL, operation_id INT DEFAULT NULL, created_at DATE NOT NULL, UNIQUE INDEX UNIQ_BFFF81BB2989F1FD (invoice_id), UNIQUE INDEX UNIQ_BFFF81BB44AC3583 (operation_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-02-28T10:51:54.104044+01:00] doctrine.DEBUG: Executing query: CREATE TABLE invoice (id INT AUTO_INCREMENT NOT NULL, status INT NOT NULL, amount DOUBLE PRECISION NOT NULL, closing_at DATE DEFAULT NULL, payment_method VARCHAR(50) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE invoice (id INT AUTO_INCREMENT NOT NULL, status INT NOT NULL, amount DOUBLE PRECISION NOT NULL, closing_at DATE DEFAULT NULL, payment_method VARCHAR(50) NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-02-28T10:51:54.119538+01:00] doctrine.DEBUG: Executing query: CREATE TABLE meeting (id INT AUTO_INCREMENT NOT NULL, address_id INT DEFAULT NULL, reserved_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', description LONGTEXT NOT NULL, INDEX IDX_F515E139F5B7AF75 (address_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE meeting (id INT AUTO_INCREMENT NOT NULL, address_id INT DEFAULT NULL, reserved_at DATETIME NOT NULL COMMENT '(DC2Type:datetime_immutable)', description LONGTEXT NOT NULL, INDEX IDX_F515E139F5B7AF75 (address_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-02-28T10:51:54.137744+01:00] doctrine.DEBUG: Executing query: CREATE TABLE operation (id INT AUTO_INCREMENT NOT NULL, meeting_id INT DEFAULT NULL, type_operation_id INT DEFAULT NULL, status INT NOT NULL, is_valid TINYINT(1) NOT NULL, price DOUBLE PRECISION NOT NULL, discount DOUBLE PRECISION DEFAULT NULL, finished_at DATE NOT NULL, description LONGTEXT NOT NULL, floor_space NUMERIC(15, 2) NOT NULL, INDEX IDX_1981A66D67433D9C (meeting_id), INDEX IDX_1981A66DC3EF8F86 (type_operation_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE operation (id INT AUTO_INCREMENT NOT NULL, meeting_id INT DEFAULT NULL, type_operation_id INT DEFAULT NULL, status INT NOT NULL, is_valid TINYINT(1) NOT NULL, price DOUBLE PRECISION NOT NULL, discount DOUBLE PRECISION DEFAULT NULL, finished_at DATE NOT NULL, description LONGTEXT NOT NULL, floor_space NUMERIC(15, 2) NOT NULL, INDEX IDX_1981A66D67433D9C (meeting_id), INDEX IDX_1981A66DC3EF8F86 (type_operation_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-02-28T10:51:54.159074+01:00] doctrine.DEBUG: Executing query: CREATE TABLE type_operation (id INT AUTO_INCREMENT NOT NULL, label VARCHAR(100) NOT NULL, price DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE type_operation (id INT AUTO_INCREMENT NOT NULL, label VARCHAR(100) NOT NULL, price DOUBLE PRECISION NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-02-28T10:51:54.174967+01:00] doctrine.DEBUG: Executing query: CREATE TABLE users (id INT AUTO_INCREMENT NOT NULL, firstname VARCHAR(255) NOT NULL, lastname VARCHAR(255) NOT NULL, date_of_birthday DATE NOT NULL, phone_number VARCHAR(10) NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, job_title VARCHAR(255) DEFAULT NULL, unit INT DEFAULT NULL, serial_worker INT DEFAULT NULL, surpervisor INT DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE users (id INT AUTO_INCREMENT NOT NULL, firstname VARCHAR(255) NOT NULL, lastname VARCHAR(255) NOT NULL, date_of_birthday DATE NOT NULL, phone_number VARCHAR(10) NOT NULL, email VARCHAR(255) NOT NULL, password VARCHAR(255) NOT NULL, job_title VARCHAR(255) DEFAULT NULL, unit INT DEFAULT NULL, serial_worker INT DEFAULT NULL, surpervisor INT DEFAULT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-02-28T10:51:54.191179+01:00] doctrine.DEBUG: Executing query: CREATE TABLE users_meeting (users_id INT NOT NULL, meeting_id INT NOT NULL, INDEX IDX_51595F367B3B43D (users_id), INDEX IDX_51595F367433D9C (meeting_id), PRIMARY KEY(users_id, meeting_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE users_meeting (users_id INT NOT NULL, meeting_id INT NOT NULL, INDEX IDX_51595F367B3B43D (users_id), INDEX IDX_51595F367433D9C (meeting_id), PRIMARY KEY(users_id, meeting_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-02-28T10:51:54.213124+01:00] doctrine.DEBUG: Executing query: CREATE TABLE users_address (users_id INT NOT NULL, address_id INT NOT NULL, INDEX IDX_FD4E1B4B67B3B43D (users_id), INDEX IDX_FD4E1B4BF5B7AF75 (address_id), PRIMARY KEY(users_id, address_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB {"sql":"CREATE TABLE users_address (users_id INT NOT NULL, address_id INT NOT NULL, INDEX IDX_FD4E1B4B67B3B43D (users_id), INDEX IDX_FD4E1B4BF5B7AF75 (address_id), PRIMARY KEY(users_id, address_id)) DEFAULT CHARACTER SET utf8mb4 COLLATE `utf8mb4_unicode_ci` ENGINE = InnoDB"} []
[2024-02-28T10:51:54.235539+01:00] doctrine.DEBUG: Executing query: ALTER TABLE belong ADD CONSTRAINT FK_BFFF81BB2989F1FD FOREIGN KEY (invoice_id) REFERENCES invoice (id) {"sql":"ALTER TABLE belong ADD CONSTRAINT FK_BFFF81BB2989F1FD FOREIGN KEY (invoice_id) REFERENCES invoice (id)"} []
[2024-02-28T10:51:54.298764+01:00] doctrine.DEBUG: Executing query: ALTER TABLE belong ADD CONSTRAINT FK_BFFF81BB44AC3583 FOREIGN KEY (operation_id) REFERENCES operation (id) {"sql":"ALTER TABLE belong ADD CONSTRAINT FK_BFFF81BB44AC3583 FOREIGN KEY (operation_id) REFERENCES operation (id)"} []
[2024-02-28T10:51:54.364228+01:00] doctrine.DEBUG: Executing query: ALTER TABLE meeting ADD CONSTRAINT FK_F515E139F5B7AF75 FOREIGN KEY (address_id) REFERENCES address (id) {"sql":"ALTER TABLE meeting ADD CONSTRAINT FK_F515E139F5B7AF75 FOREIGN KEY (address_id) REFERENCES address (id)"} []
[2024-02-28T10:51:54.427075+01:00] doctrine.DEBUG: Executing query: ALTER TABLE operation ADD CONSTRAINT FK_1981A66D67433D9C FOREIGN KEY (meeting_id) REFERENCES meeting (id) {"sql":"ALTER TABLE operation ADD CONSTRAINT FK_1981A66D67433D9C FOREIGN KEY (meeting_id) REFERENCES meeting (id)"} []
[2024-02-28T10:51:54.497905+01:00] doctrine.DEBUG: Executing query: ALTER TABLE operation ADD CONSTRAINT FK_1981A66DC3EF8F86 FOREIGN KEY (type_operation_id) REFERENCES type_operation (id) {"sql":"ALTER TABLE operation ADD CONSTRAINT FK_1981A66DC3EF8F86 FOREIGN KEY (type_operation_id) REFERENCES type_operation (id)"} []
[2024-02-28T10:51:54.564086+01:00] doctrine.DEBUG: Executing query: ALTER TABLE users_meeting ADD CONSTRAINT FK_51595F367B3B43D FOREIGN KEY (users_id) REFERENCES users (id) ON DELETE CASCADE {"sql":"ALTER TABLE users_meeting ADD CONSTRAINT FK_51595F367B3B43D FOREIGN KEY (users_id) REFERENCES users (id) ON DELETE CASCADE"} []
[2024-02-28T10:51:54.626280+01:00] doctrine.DEBUG: Executing query: ALTER TABLE users_meeting ADD CONSTRAINT FK_51595F367433D9C FOREIGN KEY (meeting_id) REFERENCES meeting (id) ON DELETE CASCADE {"sql":"ALTER TABLE users_meeting ADD CONSTRAINT FK_51595F367433D9C FOREIGN KEY (meeting_id) REFERENCES meeting (id) ON DELETE CASCADE"} []
[2024-02-28T10:51:54.689351+01:00] doctrine.DEBUG: Executing query: ALTER TABLE users_address ADD CONSTRAINT FK_FD4E1B4B67B3B43D FOREIGN KEY (users_id) REFERENCES users (id) ON DELETE CASCADE {"sql":"ALTER TABLE users_address ADD CONSTRAINT FK_FD4E1B4B67B3B43D FOREIGN KEY (users_id) REFERENCES users (id) ON DELETE CASCADE"} []
[2024-02-28T10:51:54.770537+01:00] doctrine.DEBUG: Executing query: ALTER TABLE users_address ADD CONSTRAINT FK_FD4E1B4BF5B7AF75 FOREIGN KEY (address_id) REFERENCES address (id) ON DELETE CASCADE {"sql":"ALTER TABLE users_address ADD CONSTRAINT FK_FD4E1B4BF5B7AF75 FOREIGN KEY (address_id) REFERENCES address (id) ON DELETE CASCADE"} []
[2024-02-28T10:51:54.842435+01:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20240228095144","2":"2024-02-28 10:51:54","3":779}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20240228095144","2":"2024-02-28 10:51:54","3":779},"types":{"1":2,"2":2,"3":1}} []
[2024-02-28T10:51:54.846896+01:00] deprecation.INFO: User Deprecated: Context: trying to commit a transaction Problem: the transaction is already committed, relying on silencing is deprecated. Solution: override `AbstractMigration::isTransactional()` so that it returns false. Automate that by setting `transactional` to false in the configuration. More details at https://www.doctrine-project.org/projects/doctrine-migrations/en/stable/explanation/implicit-commits.html (TransactionHelper.php:20 called by DbalExecutor.php:191, https://github.com/doctrine/migrations/issues/1169, package doctrine/migrations) {"exception":"[object] (ErrorException(code: 0): User Deprecated: Context: trying to commit a transaction\r\nProblem: the transaction is already committed, relying on silencing is deprecated.\r\nSolution: override `AbstractMigration::isTransactional()` so that it returns false.\r\nAutomate that by setting `transactional` to false in the configuration.\r\nMore details at https://www.doctrine-project.org/projects/doctrine-migrations/en/stable/explanation/implicit-commits.html (TransactionHelper.php:20 called by DbalExecutor.php:191, https://github.com/doctrine/migrations/issues/1169, package doctrine/migrations) at C:\\xampp\\htdocs\\cours\\filRouge_repo\\cleanthis\\vendor\\doctrine\\deprecations\\lib\\Doctrine\\Deprecations\\Deprecation.php:210)"} []
[2024-02-28T10:51:54.854459+01:00] doctrine.INFO: Disconnecting [] []
