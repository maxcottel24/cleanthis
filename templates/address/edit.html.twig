{% extends 'base.html.twig' %}

{% block title %}{{ "Mon Profill - Modifier Mon Adresse" |trans }}
{% endblock %}
{% block stylesheets %}
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
	<link href='https://fonts.googleapis.com/css?family=Inter' rel='stylesheet'>
	<link href="{{ asset('assets/css/editAdresse.css') }}" rel="stylesheet">
{% endblock %}

{% block body %}
	<section class="fancy">
		<div class="backgrd">
			<p>{{ "MES ADRESSES" |trans }}</p>
		</div>
		<div class="container">
			<div class="formulaire">
				{{ form_start(form) }}
				{{form_row(form.street) }}
				<div id="address_suggestions" class="list-group"></div>
				{{ form_row(form.city ) }}
				{{ form_row(form.zipcode) }}
				{{ form_row(form.is_primary) }}
				<button class="btn btn-primary">{{ "Valider" |trans }}</button>
				{{ form_end(form) }}
				<a href="/address/{{app.user.id}}" class="btn btn-primary" id="btn-retour">{{ "Retour" |trans }}</a>
			</div>
		</div>

	</section>


	<script>
		document.addEventListener('DOMContentLoaded', function () {
var streetInput = document.getElementById('address1_type_edit_street');

streetInput.addEventListener('input', debounce(function (event) {
var query = event.target.value;

if (query.length < 3) 
return;


fetch (`/api/search_address?query=${
encodeURIComponent(query)
}`).then(response => response.json()).then(data => {
const suggestions = document.getElementById('address_suggestions');
suggestions.innerHTML = '';

data.features.forEach((feature) => {
const option = document.createElement('div');
option.className = 'list-group-item list-group-item-action';
option.innerText = `${
feature.properties.name
}, ${
feature.properties.city
} , ${
feature.properties.context
}`;

option.addEventListener('click', () => {

streetInput.value = feature.properties.name;
document.getElementById('address1_type_edit_street').value = feature.properties.name;
document.getElementById('address1_type_edit_city').value = feature.properties.city;
document.getElementById('address1_type_edit_zipcode').value = feature.properties.postcode;

suggestions.innerHTML = '';
});

suggestions.appendChild(option);
});
});
}, 500));
});

function debounce(func, timeout = 100) {
let timer;
return(...args) => {
clearTimeout(timer);
timer = setTimeout(() => {
func.apply(this, args);
}, timeout);
};
}
	</script>

{% endblock %}
