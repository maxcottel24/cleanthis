{% extends 'base.html.twig' %}

{% block title %}CleanThis - Demande de devis{% endblock %}

{% block body %}
{% include '_partials/_navbar.html.twig' %}
<style>
    .example-wrapper { margin: 1em auto; max-width: 800px; width: 95%; font: 18px/1.5 sans-serif; }
    .example-wrapper code { background: #F5F5F5; padding: 2px 6px; }
</style>

<div class="example-wrapper">
    <h1> </h1>
    {{ form_start(form) }}
    {{form_row(form.reservedAt) }}
     {{form_row(form.floor_space) }}
     {{form_row(form.description) }}
      {{form_row(form.address) }}
      {{form_row(form.submit)}}
       {{form_end(form) }}
</div>
<script>
document.addEventListener("DOMContentLoaded", function() {
    const datePicker = document.querySelector("#meeting_reservedAt");

    function setMinDateTime() {
        const now = new Date();
        now.setDate(now.getDate() + 2); 
        const minDate = formatDateTimeString(now, true) + "T08:00";
        datePicker.setAttribute("min", minDate);
    }

    function adjustDateTime() {
        const inputDateTime = new Date(datePicker.value);
        const hour = inputDateTime.getHours();
        if (hour < 8 || hour > 17) {
            alert("Veuillez choisir une heure entre 8h00 et 17h00.");
            datePicker.value = ''; 
        }
        const dayOfWeek = inputDateTime.getDay();
        if (dayOfWeek === 0 || dayOfWeek === 6) {
            alert("Les rendez-vous ne peuvent pas Ãªtre pris les weekends.");
            datePicker.value = ''; 
        }
    }

    datePicker.addEventListener("change", adjustDateTime);

    function formatDateTimeString(date, isDateOnly) {
        const year = date.getFullYear();
        const month = (date.getMonth() + 1).toString().padStart(2, '0');
        const day = date.getDate().toString().padStart(2, '0');
        if (isDateOnly) {
            return `${year}-${month}-${day}`;
        } else {
            const hours = date.getHours().toString().padStart(2, '0');
            const minutes = date.getMinutes().toString().padStart(2, '0');
            return `${year}-${month}-${day}T${hours}:${minutes}`;
        }
    }

    setMinDateTime();
});
</script>
{% endblock %}
